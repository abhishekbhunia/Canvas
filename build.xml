<project name="Canvas-PS5" default="runAll">

  <description>
    Canvas-PS5: The build file compiles, builds, runs main app and testcases,
    creates javadoc for Canvas Application source code, and generates Ant build report
  </description>

  <property name="src.dir" location="src" />
  <property name="testsrc.dir" location="testsrc" />
  <property name="build.dir" location="bin" />
  <property name="lib.dir" location="lib" />
  <property name="dist.dir" location="dist" />
  <property name="reports.dir" location="reports" />
  <property name="docs.dir" location="docs" />

  <!-- set all path elements -->
  <path id="src.path">
    <pathelement path="${src.dir}" />
  </path>

  <path id="compile.path">
    <path refid="src.path" />
    <fileset dir="${lib.dir}">
      <include name="**/*.jar" />
    </fileset>
  </path>

  <path id="junit.path">
    <path refid="compile.path" />
    <pathelement path="${testsrc.dir}" />
  </path>

  <!-- clean all folders -->
  <target name="cleanup" description="clean stale builds, docs, jars etc">
    <delete dir="${build.dir}" />
    <delete dir="${dist.dir}" />
    <delete dir="${reports.dir}" />
    <delete dir="${docs.dir}" />
    <mkdir dir="${build.dir}" />
    <mkdir dir="${dist.dir}" />
    <mkdir dir="${reports.dir}" />
    <mkdir dir="${docs.dir}" />
  </target>

  <!-- compile the source code -->
  <target name="compileMain" depends="cleanup">
    <javac srcdir="${src.dir}" destdir="${build.dir}" includeantruntime="false">
      <classpath refid="compile.path" />
    </javac>
  </target>

  <!-- create Javadoc for Canvas source only -->
  <target name="docs" depends="compileMain" description="create javadocs for only application code">
    <javadoc packagenames="src" sourcepath="${src.dir}" destdir="${docs.dir}">
      <fileset dir="${src.dir}">
        <include name="**" />
      </fileset>
    </javadoc>
  </target>

  <!-- compile JUnit source code -->
  <target name="compileJUnit" depends="compileMain" description="run JUnit tests">
    <javac srcdir="${testsrc.dir}" destdir="${build.dir}" includeantruntime="false">
      <classpath refid="junit.path" />
    </javac>
  </target>

  <!-- create JAR -->
  <target name="jar" depends="compileMain, compileJUnit, docs" description="create application jar">
    <jar jarfile="${dist.dir}/Canvas.jar" basedir="${build.dir}">
      <manifest>
        <attribute name="Main-Class" value="edu.nyu.cs.canvas.CanvasApp" />
      </manifest>
    </jar>
  </target>

  <!-- run main Canvas application -->
  <target name="runApp" depends="jar" description="run application">
    <java jar="${dist.dir}/Canvas.jar" fork="true" />
  </target>

  <!-- run batch JUnit test -->
  <target name="runJUnit" depends="compileJUnit">
    <junit printsummary="yes" haltonerror="true" haltonfailure="true">
      <classpath>
        <pathelement path="${build.dir}" />
        <pathelement location="lib/junit.jar" />
        <pathelement location="lib/hamcrest-core-1.3.jar" />
      </classpath>
      <formatter type="xml" />
      <batchtest todir="${reports.dir}">
        <fileset dir="${build.dir}" includes="**/*Test*.class" />
      </batchtest>
    </junit>
  </target>

  <!-- create JUnit report -->
  <target name="JUnitreport" depends="runJUnit">
    <junitreport todir="${reports.dir}">
      <fileset dir="${reports.dir}" includes="*TEST*.xml" />
      <report todir="${reports.dir}" />
    </junitreport>
  </target>

  <target name="runAll" depends="runApp, runJUnit, JUnitreport" />

</project>